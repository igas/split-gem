# split_apiv2
#
# This file was automatically generated by APIMATIC v2.0 (
# https://apimatic.io ).

module SplitApiv2
  # Data Model.
  class Data < BaseModel
    # The name of the Contact
    # @return [String]
    attr_accessor :name

    # The email of the Contact
    # @return [String]
    attr_accessor :email

    # The bank account number of the Contact
    # @return [String]
    attr_accessor :account_number

    # The bank account BSB of the Contact
    # @return [String]
    attr_accessor :branch_code

    # Can be used for custom data requirements or Split customisations
    # @return [Object]
    attr_accessor :metadata

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['email'] = 'email'
      @_hash['account_number'] = 'account_number'
      @_hash['branch_code'] = 'branch_code'
      @_hash['metadata'] = 'metadata'
      @_hash
    end

    def initialize(name = nil,
                   email = nil,
                   account_number = nil,
                   branch_code = nil,
                   metadata = nil)
      @name = name
      @email = email
      @account_number = account_number
      @branch_code = branch_code
      @metadata = metadata
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash['name']
      email = hash['email']
      account_number = hash['account_number']
      branch_code = hash['branch_code']
      metadata = hash['metadata']

      # Create object from extracted values.
      Data.new(name,
               email,
               account_number,
               branch_code,
               metadata)
    end
  end
end
